name: Release electron artifact on merge
on:
  push:
    tags:
      - v0.*
jobs:
  build_and_release_desktop:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1
      - name: Create environment file
        env:
          OPEN_WEATHER_API_ID: '${{ secrets.OPEN_WEATHER_API_ID }}'
          SENTRY_DSN: '${{ secrets.SENTRY_DSN }}'
          FIREBASE_API_KEY: '${{ secrets.FIREBASE_API_KEY }}'
          FIREBASE_MESSAGING_SENDER_ID: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'
          FIREBASE_APP_ID: '${{ secrets.FIREBASE_APP_ID }}'
          FIREBASE_MEASUREMENT_ID: '${{ secrets.FIREBASE_MEASUREMENT_ID }}'
        run: |
          touch .env
          echo "REACT_APP_OPEN_WEATHER_API_ID=$OPEN_WEATHER_API_ID" >> .env
          echo "REACT_APP_ENVIRONMENT=Production" >> .env
          echo "REACT_APP_SENTRY_DSN=$SENTRY_DSN" >> .env
          echo "REACT_APP_API_KEY=$FIREBASE_API_KEY" >> .env
          ehco "REACT_APP_AUTH_DOMAIN=weather-caddy.firebaseapp.com" >> .env
          echo "REACT_APP_DATABASE_URL=https://weather-caddy.firebaseio.com" >> .env
          echo "REACT_APP_PROJECT_ID=weather-caddy" >> .env
          echo "REACT_APP_STORAGE_BUCKET=weather-caddy.appspot.com" >> .env
          echo "REACT_APP_MESSAGING_SENDER_ID=$FIREBASE_MESSAGING_SENDER_ID" >> .env
          echo "REACT_APP_APP_ID=$FIREBASE_APP_ID" >> .env
          echo "REACT_APP_MEASUREMENT_ID=$FIREBASE_MEASUREMENT_ID" >> .env
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Run Capacitor Build
        run: npm ci && npm run build && npx cap sync @capacitor-community/electron
      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1
        if: startsWith(matrix.os, 'ubuntu')
        with:
          snapcraft_token: ${{ secrets.SNAPCRAFT_TOKEN }}
      - name: Build/release Electron app
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{ secrets.github_token }}
          package_root: electron
          release: true
